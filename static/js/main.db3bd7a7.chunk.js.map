{"version":3,"sources":["Item.js","CustomView.js","SortableItem.js","Container.js","App.js","serviceWorker.js","index.js"],"names":["Item","_ref","id","content","style","viewList","ref","useRef","_useDrag","useDrag","item","type","drag","Object","slicedToArray","react_default","a","createElement","Fragment","className","CustomView","setForm","moveItem","copyItem","timeout","_useDrop","useDrop","accept","drop","monitor","didDrop","clearTimeout","console","log","collect","backgroundColor","isOver","shallow","_useDrop2","myStyle","active","objectWithoutProperties","View","objectSpread","map","t","i","card","index","src_SortableItem","key","SortableItem","hover","current","dragIndex","hoverIndex","hoverBoundingRect","getBoundingClientRect","hoverMiddleY","bottom","top","hoverClientY","getClientOffset","y","setTimeout","onClick","e","$","target","addClass","siblings","removeClass","comp","TouchableOpacity","onPress","_","Text","color","TextInput","value","Switch","src_CustomView","checkItem","Container","contList","find","App","_useState","useState","rendered","width","margin","padding","display","inside","_useState2","itemList","_useState3","_useState4","setContList","_useState5","height","_useState6","form","useCallback","newArray","toConsumableArray","dragItem","handleChange","defineProperty","src_Item","src_Container","newComp","concat","onSubmit","preventDefault","newList","placeholder","onChange","Boolean","window","location","hostname","match","ReactDOM","render","esm","backend","HTML5Backend","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.db3bd7a7.chunk.js","sourcesContent":["import React, { useRef } from 'react'\r\nimport { useDrag, useDrop } from 'react-dnd';\r\nimport * as $ from 'jquery'\r\n\r\nconst Item = ({ id, content, style, viewList }) => {\r\n\r\n    const ref = useRef(null);\r\n    const [, drag] = useDrag({\r\n        item: { type: 'item', content, id, style, viewList },\r\n    })\r\n    drag(ref)\r\n    return (\r\n        <>\r\n            {<div ref={ref} className=\"list-item\" > {content}</div>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Item\r\n","import React, { useRef, useState } from 'react'\r\nimport { View } from 'react-native-web'\r\nimport { useDrop } from 'react-dnd';\r\nimport SortableItem from './SortableItem';\r\n\r\nconst CustomView = ({ style, setForm, moveItem, copyItem, viewList, timeout }) => {\r\n\r\n    const ref = useRef(null);\r\n    const [{ backgroundColor }, drop] = useDrop({\r\n        accept: ['item', 'sortableitem'],\r\n        drop: (item, monitor) => {\r\n            if (!monitor.didDrop()) {\r\n                clearTimeout(timeout)\r\n                console.log('dropped')\r\n            }\r\n        },\r\n        collect: monitor => {\r\n            return {\r\n                backgroundColor: monitor.isOver({ shallow: true }) ? 'lightgreen' : style.backgroundColor\r\n            }\r\n        }\r\n    })\r\n\r\n    const { active, ...myStyle } = style;\r\n    drop(ref)\r\n\r\n    const renderItem = (card, index) => {\r\n        return (\r\n            <SortableItem\r\n                key={card.id}\r\n                index={index}\r\n                id={card.id}\r\n                content={card.content}\r\n                style={card.style}\r\n                setForm={setForm}\r\n                moveItem={moveItem}\r\n            />\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div ref={ref} ><View style={{ ...myStyle, backgroundColor }} >\r\n            {viewList.map((t, i) => renderItem(t, i))}\r\n        </View></div>\r\n    )\r\n}\r\n\r\nexport default CustomView\r\n","import React, { useRef } from 'react'\r\nimport { useDrag, useDrop } from 'react-dnd';\r\nimport * as $ from 'jquery'\r\nimport { TouchableOpacity, TextInput, Text, Switch, View } from 'react-native-web'\r\nimport CustomView from './CustomView';\r\n\r\n\r\nconst SortableItem = ({ index, id, content, style, setForm, moveItem, viewList, copyItem }) => {\r\n\r\n    const ref = useRef(null);\r\n    let timeout;\r\n    const [, drag] = useDrag({\r\n        item: { type: 'sortableitem', index, id, content, style, viewList },\r\n    })\r\n    const [, drop] = useDrop({\r\n        accept: 'sortableitem',\r\n        drop: (item, monitor) => {\r\n            clearTimeout(timeout)\r\n        },\r\n        hover: (item, monitor) => {\r\n            if (!ref.current) {\r\n                return\r\n            }\r\n            const dragIndex = item.index\r\n            const hoverIndex = index\r\n            if (dragIndex === hoverIndex) {\r\n                clearTimeout(timeout)\r\n                return\r\n            }\r\n            const hoverBoundingRect = ref.current.getBoundingClientRect()\r\n            const hoverMiddleY =\r\n                (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2\r\n            const clientOffset = monitor.getClientOffset()\r\n            const hoverClientY = clientOffset.y - hoverBoundingRect.top\r\n            if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\r\n                return\r\n            }\r\n            if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\r\n                return\r\n            }\r\n            if (content === 'View') {\r\n                if (!timeout) {\r\n                    timeout = setTimeout(() => {\r\n                        moveItem(dragIndex, hoverIndex)\r\n                        item.index = hoverIndex\r\n                    }, 1000)\r\n                    return\r\n                }\r\n                return\r\n            }\r\n            moveItem(dragIndex, hoverIndex)\r\n            item.index = hoverIndex\r\n        },\r\n    })\r\n\r\n    const handleFocus = (e) => {\r\n        let elem = $(e.target);\r\n        elem.addClass('active').siblings().removeClass('active');\r\n        setForm({\r\n            ...style,\r\n            active: index\r\n        })\r\n    }\r\n\r\n    const checkItem = (comp) => {\r\n        switch (comp) {\r\n            case 'Button':\r\n                return <TouchableOpacity style={{ ...style }} onPress={_ => { }} ><Text style={{ color: style.color }}>Builder</Text></TouchableOpacity>\r\n            case 'TextInput':\r\n                return <TextInput style={{ ...style }} value=\"Builder\" />\r\n            case 'Switch':\r\n                return <Switch />\r\n            case 'View':\r\n                return <CustomView setForm={setForm} timeout={timeout}\r\n                    moveItem={moveItem} copyItem={copyItem} style={{ ...style }} viewList={viewList} />\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    drop(drag(ref))\r\n    return (\r\n        <div ref={ref} onClick={handleFocus}>{checkItem(content)}</div>\r\n    )\r\n}\r\n\r\nexport default SortableItem\r\n","import React, { useRef } from 'react'\r\nimport { useDrop } from 'react-dnd';\r\nimport SortableItem from './SortableItem';\r\n\r\nconst Container = ({ moveItem, copyItem, contList, setForm }) => {\r\n\r\n    const ref = useRef(null);\r\n    const [{ backgroundColor }, drop] = useDrop({\r\n        accept: ['item', 'sortableitem'],\r\n        drop: (item, monitor) => {\r\n            if (!monitor.didDrop()) {\r\n                if (!contList.find(comp => comp.id === item.id)) {\r\n                    copyItem({ ...item })\r\n                }\r\n            }\r\n        },\r\n        hover: (item, monitor) => {\r\n            if (monitor.isOver({ shallow: true })) {\r\n            }\r\n        },\r\n        collect: monitor => {\r\n            return {\r\n                backgroundColor: monitor.isOver({ shallow: true }) ? 'lightgreen' : 'white'\r\n            }\r\n        }\r\n    })\r\n\r\n    const renderItem = (card, index) => {\r\n        return (\r\n            <SortableItem\r\n                key={card.id}\r\n                index={index}\r\n                id={card.id}\r\n                content={card.content}\r\n                style={card.style}\r\n                setForm={setForm}\r\n                viewList={card.viewList}\r\n                moveItem={moveItem}\r\n                copyItem={copyItem}\r\n            />\r\n        );\r\n    };\r\n    drop(ref);\r\n    return (\r\n        <section ref={ref} className=\"list-container\" style={{ backgroundColor }}>\r\n            {contList.map((t, i) => renderItem(t, i))}\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Container\r\n","import React, { useState, useCallback } from 'react';\r\nimport Item from './Item';\r\nimport Container from './Container';\r\nimport { TextInput, Button, StyleSheet } from 'react-native-web'\r\n\r\nfunction App() {\r\n\r\n  const [itemList, setItemList] = useState([\r\n    { id: 1, content: 'Button', rendered: false, style: { color: '#f00', width: '80%', margin: '1rem', padding: '10px', display: 'block' } },\r\n    { id: 2, content: 'Switch', rendered: false, style: { width: '80%', margin: '1rem', padding: '10px', display: 'block' } },\r\n    { id: 3, content: 'TextInput', rendered: false, style: { width: '80%', margin: '1rem', padding: '10px', color: '#f00' } },\r\n    {\r\n      id: 4, content: 'View', rendered: false, style: { width: '100%', backgroundColor: '#f0f', margin: '0', padding: '10px', }, inside:\r\n        [\r\n          // { id: 1, content: 'Button', rendered: false, style: { color: '#f00', width: '80%', margin: '1rem', padding: '10px', display: 'block' } }\r\n        ]\r\n    },\r\n  ]);\r\n\r\n  const [contList, setContList] = useState([]);\r\n\r\n  const [form, setForm] = useState({\r\n    width: '',\r\n    height: '',\r\n    margin: '',\r\n    padding: '',\r\n    display: '',\r\n    color: '',\r\n    backgroundColor: '',\r\n    active: -1\r\n  })\r\n\r\n  const moveItem = useCallback(\r\n    (dragIndex, hoverIndex) => {\r\n      let newArray = [...contList];\r\n      const dragItem = newArray[dragIndex];\r\n      newArray[dragIndex] = newArray[hoverIndex];\r\n      newArray[hoverIndex] = dragItem;\r\n      setContList(\r\n        newArray\r\n      )\r\n    },\r\n    [contList],\r\n  )\r\n\r\n  const copyItem = (comp) => {\r\n    console.log(comp)\r\n    if (!contList.find(item => item.content === comp.content)) {\r\n      let newComp = { ...comp };\r\n      newComp.rendered = true;\r\n      newComp.id = newComp.id + '1'\r\n      setContList([...contList, newComp])\r\n      return\r\n    }\r\n    console.log(comp)\r\n    // let newCont = [...contList];\r\n    // newCont = newCont.filter(item => item.content === comp.content)\r\n\r\n    // setContList(newCont)\r\n  }\r\n\r\n  const handleChange = (e) => {\r\n    setForm({\r\n      ...form,\r\n      [e.target.id]: e.target.value\r\n    })\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    if (form.active !== -1) {\r\n      let newList = [...contList];\r\n      newList[form.active].style = form;\r\n      setContList(newList);\r\n    }\r\n  }\r\n\r\n  const renderItem = (card, index) => {\r\n    return (\r\n      <Item\r\n        key={card.id}\r\n        index={index}\r\n        id={card.id}\r\n        content={card.content}\r\n        style={card.style}\r\n        viewList={card.inside}\r\n      />\r\n    );\r\n  };\r\n\r\n  return (\r\n    <main className=\"container\">\r\n      <section className=\"list\">\r\n        {itemList.map((t, i) => renderItem(t, i))}\r\n      </section>\r\n\r\n      <Container moveItem={moveItem} copyItem={copyItem} contList={contList} setForm={setForm} />\r\n\r\n      <form className=\"form\" onSubmit={handleSubmit}>\r\n        <input className=\"form-input\" placeholder=\"width\" id=\"width\" onChange={handleChange} value={form.width} />\r\n        <input className=\"form-input\" placeholder=\"height\" id=\"height\" value={form.height} onChange={handleChange} />\r\n        <input className=\"form-input\" placeholder=\"margin\" id=\"margin\" value={form.margin} onChange={handleChange} />\r\n        <input className=\"form-input\" placeholder=\"padding\" id=\"padding\" value={form.padding} onChange={handleChange} />\r\n        <input className=\"form-input\" placeholder=\"display\" id=\"display\" value={form.display} onChange={handleChange} />\r\n        <input className=\"form-input\" placeholder=\"color\" id=\"color\" value={form.color} onChange={handleChange} />\r\n        <input className=\"form-input\" placeholder=\"background-color\" id=\"backgroundColor\" value={form.backgroundColor} onChange={handleChange} />\r\n        <button type=\"submit\">Submit</button>\r\n      </form>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport { DragDropContextProvider } from 'react-dnd';\r\nimport HTML5Backend from 'react-dnd-html5-backend';\r\n\r\nReactDOM.render(\r\n    <DragDropContextProvider backend={HTML5Backend}>\r\n        <App />\r\n    </DragDropContextProvider>\r\n    , document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}